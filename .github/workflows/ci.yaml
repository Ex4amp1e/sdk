---
name: ci
on:
  pull_request:
  push:
    branches:
      - "release/**"
jobs:
  yamllint:
    uses: networkservicemesh/.github/.github/workflows/yamllint.yaml@main

  build-and-test:
    uses: networkservicemesh/.github/.github/workflows/build-and-test.yaml@main
    with:
      os: '["ubuntu-latest", "macos-latest", "windows-latest"]'

  golangci-lint:
    uses: networkservicemesh/.github/.github/workflows/golangci-lint.yaml@main

  exclude-fmt-errorf:
    uses: networkservicemesh/.github/.github/workflows/exclude-fmt-errorf.yaml@main

  restrict-nsm-deps:
    uses: networkservicemesh/.github/.github/workflows/restrict-nsm-deps.yaml@main
    with:
      allowed_repositories: "api"

  checkgomod:
    uses: networkservicemesh/.github/.github/workflows/checkgomod.yaml@main

  gogenerate:
    uses: networkservicemesh/.github/.github/workflows/sdk-gogenerate.yaml@main

  exclude-replace:
    uses: networkservicemesh/.github/.github/workflows/exclude-replace.yaml@main

  # code-cov:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: ${{ fromJson(inputs.os) }}
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #     - name: Setup Go
  #       uses: actions/setup-go@v1
  #       with:
  #         go-version: 1.18.1
  #     - run: |
  #         go test -coverprofile=cover.out -covermode=atomic -race ./...; [ -f cover.out ] && cat cover.out > ../coverage.txt
  #     - name: Upload coverage reports to Codecov with GitHub Action
  #       uses: codecov/codecov-action@v3
